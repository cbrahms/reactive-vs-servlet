---
- name: Infra Components for Reactive-vs-Servlet demo
  hosts: localhost
  gather_facts: yes
  run_once: true
  vars:
    user_openshift: developer
    openshift_cli: /usr/local/bin/oc
    minishift: true
    oc_client_allowed_versions: (v3.9|v3.10)
    openjdk_is_definition: https://raw.githubusercontent.com/openshift/openshift-ansible/release-3.9/roles/openshift_examples/files/examples/v3.9/xpaas-streams/openjdk18-image-stream.json
  tasks:
    - name: Verify oc client version
      shell: oc version | grep ^oc | grep -Eq "{{ oc_client_allowed_versions }}"
      changed_when: false

    - name: Setting up minishift
      include_role:
        name: minishift
      tags: always
      when: minishift

    - name: Collecting facts about Openshift
      include_role:
        name: openshift_common_facts

    - name: Deploy istio-system
      include_role:
        name: istio-system

    # validate cluster
    - name: Install openjdk image stream
      shell: "{{ openshift_cli }} get is redhat-openjdk18-openshift -n openshift || {{ openshift_cli }} create -f {{ openjdk_is_definition }} -n openshift"
      register: jdk_imagestream_result

    - name: Setup access rights for Istio for the project
      shell: |
        {{ openshift_cli }} get project coolstore || {{ openshift_cli }} adm new-project coolstore --display-name='Coolstore' --admin='developer'
        {{ openshift_cli }} adm policy add-scc-to-user privileged -z default -n coolstore
        {{ openshift_cli }} adm policy add-role-to-group view system:serviceaccounts -n coolstore
        {{ openshift_cli }} adm policy add-role-to-user view -z default -n coolstore
        # {{ openshift_cli }} adm policy add-scc-to-user anyuid -z default coolstore
        # {{ openshift_cli }} adm policy add-role-to-user admin system:serviceaccount:coolstore:default -n coolstore

    - name: set istioctl kubeconfig
      set_fact:
        istio_options: "--kubeconfig {{ oc_kube_config }}"
      when:
        - oc_kube_config is defined
        - oc_kube_config is not none
        - oc_kube_config|trim() != ""

    # - name: Deploy inventory
    #   shell: |
    #     {{ openshift_cli }} get svc inventory -n coolstore > /dev/null 2>&1 || \
    #     ( \
    #       {{ openshift_cli }} apply -f <({{ istio_ctl }} kube-inject {{ istio_options }} -f files/inventory-deployment.yml) -n coolstore && \
    #       {{ openshift_cli }} create -f files/inventory-service.yml -n coolstore
    #     )
    #   args:
    #     executable: /bin/bash

    - name: Deploy inventory
      shell: |
        {{ openshift_cli }} get svc inventory -n coolstore || \
        ( \
          {{ openshift_cli }} apply -f <({{ istio_ctl }} kube-inject {{ istio_options }} -f files/inventory-deployment.yml) -n coolstore && \
          {{ openshift_cli }} create -f files/inventory-service.yml -n coolstore;
        )
      args:
        executable: /bin/bash

    - name: Deploy catalog
      shell: |
        {{ openshift_cli }} get svc catalog -n coolstore || \
        ( \
          {{ openshift_cli }} apply -f <({{ istio_ctl }} kube-inject {{ istio_options }} -f files/catalog-deployment.yml) -n coolstore && \
          {{ openshift_cli }} create -f files/catalog-service.yml -n coolstore;
        )
      args:
        executable: /bin/bash

    - name: Deploy gateway-spring
      shell: |
        {{ openshift_cli }} get dc gateway-spring -n coolstore || \
        ( \
          {{ openshift_cli }} apply -f <({{ istio_ctl }} kube-inject {{ istio_options }} -f files/gateway-spring-deployment.yml) -n coolstore \
        )
      args:
        executable: /bin/bash

    - name: Deploy gateway-vertx
      shell: |
        {{ openshift_cli }} get dc gateway-vertx -n coolstore || \
        ( \
          {{ openshift_cli }} apply -f <({{ istio_ctl }} kube-inject {{ istio_options }} -f files/gateway-vertx-deployment.yml) -n coolstore \
        )
      args:
        executable: /bin/bash

    - name: Deploy gateway-service
      shell: |
        {{ openshift_cli }} get svc gateway -n coolstore || \
        ( \
          {{ openshift_cli }} create -f files/gateway-service.yml -n coolstore;
        )
      args:
        executable: /bin/bash

    - name: Deploy web
      shell: |
        {{ openshift_cli }} get svc web -n coolstore || \
        ( \
          {{ openshift_cli }} apply -f <({{ istio_ctl }} kube-inject {{ istio_options }} -f files/web-deployment.yml) -n coolstore && \
          {{ openshift_cli }} create -f files/web-service.yml -n coolstore;
        )
      args:
        executable: /bin/bash

    - name: Deploy ingress-route and default route
      shell: |
        {{ openshift_cli }} get gateway coolstore-ingress -n coolstore || {{ istio_ctl }} create -f files/istio/istio-ingress-gateway.yaml -n coolstore
        {{ openshift_cli }} get virtualservice gateway -n coolstore || {{ istio_ctl }} create -f files/istio/virtualservice-gateway.yml  -n coolstore
        {{ openshift_cli }} get destinationrule gateway -n coolstore || {{ istio_ctl }} create -f files/istio/destination-rule-gateway.yml  -n coolstore
      args:
        executable: /bin/bash

    - name: Set current project to coolstore
      shell: |
        {{ openshift_cli }} project coolstore
      args:
        executable: /bin/bash

