---
- name: Infra Components for Reactive-vs-Servlet demo
  hosts: localhost
  gather_facts: true
  run_once: true
  vars:
    infra_project: demo-infra
    user_openshift: developer
    user_gogs_admin: gogs
    user_gogs_user: developer
    user_gogs_password: openshift
    openshift_cli: /usr/local/bin/oc
    github_repo: https://github.com/tqvarnst/reactive-vs-servlet.git
    github_account: openshift-labs
    github_ref: master
    istio_version: 0.6.0
    istio_options:
    clean_init: false
  tasks:
    - include_role:
        name: openshift_common_facts
      tags: always

    - include_role:
        name: demo_common_facts
      tags: always

    - set_fact:
        gogs_hostname: gogs-{{ infra_project }}.{{ apps_hostname_suffix }}
      tags: always


#    - name: create infra project
#      shell: "{{ openshift_cli }} new-project {{ infra_project }}"
#      when: not infra_project_exists
#      tags: always

    # deploy nexus
#    - import_role:
#        name: openshift_sonatype_nexus
#      vars:
#        project_name: "{{ infra_project }}"
#        nexus_image_version: 3.10.0
#        nexus_max_memory: 6Gi
#      when: not nexus_svc_exists
#      tags: nexus
#
#    # deploy gogs
#    - include_tasks: init_gogs.yml
#      tags: gogs

    # deploy istio and prod
    - include_tasks: init_istio.yml
      tags: istio

    # validate cluster
    - name: check openjdk image stream installed
      shell: "{{ openshift_cli }} get is redhat-openjdk18-openshift -n openshift"
      register: jdk_imagestream_result
      ignore_errors: true
      tags: validate

    - name: Install openjdk image stream
      shell: "{{ openshift_cli }} create -f https://raw.githubusercontent.com/openshift/openshift-ansible/release-3.9/roles/openshift_examples/files/examples/v3.9/xpaas-streams/jboss-image-streams.json -n openshift"
      when: jdk_imagestream_result is failed
      tags: validate

# Populate inventory-dev template
    - name: Install project coolstore project for each type
      include_tasks: init_project.yml
      vars:
        project_suffix: "{{ gateway_type }}"
      with_items:
        - spring
        - vertx
      loop_control:
          loop_var: gateway_type
