apiVersion: v1
kind: Template
metadata:
  annotations:
    description: CoolStore Microservices - Web Template
    iconClass: icon-java
    tags: microservice,nodejs
  name: web
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: web
    name: web
  spec:
    tags:
      - from:
          kind: DockerImage
          name: 'docker.io/coolstore/web:latest'
        name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: web
    labels:
      app: web
  spec:
    replicas: 1
    selector:
      deploymentconfig: web
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: web
          deploymentconfig: web
        # annotations:
        #   sidecar.istio.io/inject: "true"
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: COOLSTORE_GW_SERVICE
            value: catalog
          - name: HOSTNAME_HTTP
            value: web:8080
          image: web
          imagePullPolicy: Always
          name: web
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - web
        from:
          kind: ImageStreamTag
          name: web:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: web
    name: web
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: web
- apiVersion: v1
  kind: Route
  metadata:
    name: web
    labels:
      app: web
  spec:
    to:
      kind: Service
      name: web